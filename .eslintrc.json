{
  "env": {
    "es2020": true,
    "node": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "extends": ["prettier"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["standard-with-typescript"],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "no-console": "warn",
        "no-debugger": "warn",
        "tsdoc/syntax": "warn",
        "object-shorthand": "error",
        "@typescript-eslint/no-base-to-string": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/ban-ts-comment": "warn",
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "none",
              "requireLast": false
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            },
            "multilineDetection": "brackets"
          }
        ],
        "@typescript-eslint/space-before-function-paren": [
          "error",
          {
            "anonymous": "always",
            "named": "never",
            "asyncArrow": "always"
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": ["class", "interface"],
            "format": ["PascalCase"]
          },
          {
            "selector": ["parameter"],
            "format": ["camelCase"]
          },
          {
            "selector": ["typeProperty"],
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": ["variable"],
            "modifiers": ["exported"],
            "format": ["PascalCase", "camelCase", "UPPER_CASE"]
          }
        ]
      }
    }
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "eslint-plugin-jest",
    "eslint-plugin-tsdoc"
  ],
  "ignorePatterns": [
    "dist/**/*",
    "**/node_modules/**",
    "docApi/**/*",
    "coverage/**/*"
  ]
}
